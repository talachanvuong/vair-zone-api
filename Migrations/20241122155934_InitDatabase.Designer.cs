// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VAirZoneWebAPI.Databases;

#nullable disable

namespace VAirZoneWebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241122155934_InitDatabase")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VAirZoneWebAPI.Models.Organizer.ActivityModel", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<string>("PostUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ActivityName")
                        .IsUnique();

                    b.HasIndex("OrganizerId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.Organizer.ErrorCatcherModel", b =>
                {
                    b.Property<int>("ErrorCatcherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorCatcherId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("ErrorCatcherId");

                    b.HasIndex("OrganizerId");

                    b.ToTable("ErrorCatchers");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.Organizer.OrganizerModel", b =>
                {
                    b.Property<int>("OrganizerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizerId"));

                    b.Property<string>("OrganizerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("OrganizerId");

                    b.HasIndex("OrganizerName")
                        .IsUnique();

                    b.ToTable("Organizers");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.User.UserCodeModel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("TimeExpired")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("UserCodes");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.User.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AdditionalUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.Organizer.ActivityModel", b =>
                {
                    b.HasOne("VAirZoneWebAPI.Models.Organizer.OrganizerModel", "Organizer")
                        .WithMany("Activities")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.Organizer.ErrorCatcherModel", b =>
                {
                    b.HasOne("VAirZoneWebAPI.Models.Organizer.OrganizerModel", "Organizer")
                        .WithMany("ErrorCatchers")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.User.UserCodeModel", b =>
                {
                    b.HasOne("VAirZoneWebAPI.Models.User.UserModel", "User")
                        .WithOne("UserCode")
                        .HasForeignKey("VAirZoneWebAPI.Models.User.UserCodeModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.Organizer.OrganizerModel", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("ErrorCatchers");
                });

            modelBuilder.Entity("VAirZoneWebAPI.Models.User.UserModel", b =>
                {
                    b.Navigation("UserCode")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
